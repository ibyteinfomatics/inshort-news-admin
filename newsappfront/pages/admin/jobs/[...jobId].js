import Link from "next/link";
import React, { useEffect, useState } from "react";

import { Modal, Table, TableCell, TableRow } from "@mui/material";
import { styled } from "@mui/material/styles";
import { tableCellClasses } from "@mui/material/TableCell";
import Head from "next/head";
import SideBar from "../../../components/side-bar/SideBar";
import DashboardHeader from "../../../components/header/DashboardHeader";
import { useRouter } from "next/router";
import { setJobDetail } from "../../../reducers/job-reducer";
import { useSelector, useDispatch } from "react-redux";
import { userService } from "../../../services";

const driverProfile = () => {
  const [rout, setRout] = useState("");
  const router = useRouter();

  const id = router?.query?.jobId?.[1] || router?.query?.jobId?.[0];
  console.log(router?.query);
  console.log("id is this", id);
  const dispatch = useDispatch();

  const { jobDetail } = useSelector((state) => state.jobs);

  const packagesType = ["Small", "Medium", "Large", "Letter"];
  const jobsType = ["", "Single Package", "Multiple Package"];

  useEffect(() => {
    getSingleJobDetail();
  }, [id]);
  // useEffect(() => {
  //   whereToRender();
  // }, []);

  const getSingleJobDetail = async () => {
    const res = await userService.getSingleJob(id);
    console.log(res);
    if (res.success) {
      await dispatch(setJobDetail(res?.job));
    } else {
      console.log(res.msg);
    }
  };

  // const whereToRender = () => {
  //   if (router?.query?.jobId?.[0] === "pending-jobs") {
  //     setRout(`/admin/jobs/pending-jobs`);
  //   } else if (router?.query?.jobId?.[0] === "latest-jobs") {
  //     setRout(`/admin/jobs/latest-jobs`);
  //   } else {
  //     setRout(`/admin/jobs`);
  //   }
  // };
  // const whereToRender = () =>{
  //   router?.query?.jobId?.[0] === "pending-jobs" ? setRout("admin/pending-jobs") : router?.query?.jobId?.[0] === "latest-jobs" ? setRout("admin/latest-jobs") : setRout("admin/jobs")
  // }
console.log(jobDetail)
  return (
    <>
      <Head>
        <title>Job Detail</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <SideBar />
      <div className="dashboard sideBarOpen">
        <DashboardHeader />
        <div className="contentWrapper">
          <div className="dashboard_content innerPage">
            {
              <div className="table--layout">
                <div className="go-back">
                  <div>Job Details</div>
                  <div className="gap">
                    <button className="creatButton label-success">
                      <Link href={rout}>Back to List</Link>
                    </button>
                  </div>
                </div>

                <Table>
                  <tbody>
                    <StyledTableRow>
                      <StyledTableCell className="table-partition">
                        Basic
                      </StyledTableCell>
                      <StyledTableCell className="table-partition"></StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Created By :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.customer_type}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Job status :-
                      </StyledTableCell>
                      <StyledTableCell>{jobDetail?.job_status}</StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Job Type :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobsType[jobDetail?.job_type] || jobDetail?.job_type}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Created At :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {new Date(jobDetail?.createdAt).toDateString()}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Updated At :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {new Date(jobDetail?.updatedAt).toDateString()}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell className="table-partition">
                        Pickup Details
                      </StyledTableCell>
                      <StyledTableCell className="table-partition"></StyledTableCell>
                    </StyledTableRow>
                    <StyledTableRow>
                      <StyledTableCell variant="head">Name :-</StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.pick_up?.name}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Mobile :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.pick_up?.mobile}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Address :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.pick_up?.address}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Address details :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.pick_up?.address_details}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Coordinates :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.pick_up?.loc?.coordinates.map((item, i) => {
                          return (
                            <span className="label label-roles" key={i}>
                              {item}
                            </span>
                          );
                        })}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Instructions :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.pick_up?.instruction}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell className="table-partition">
                        Delivery Details
                      </StyledTableCell>
                      <StyledTableCell className="table-partition"></StyledTableCell>
                    </StyledTableRow>
                    <StyledTableRow>
                      <StyledTableCell variant="head">Name :-</StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.delivery?.name}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Mobile :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.delivery?.mobile}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Address :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.delivery?.address}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Address details :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.delivery?.address_details}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Coordinates :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.delivery?.loc?.coordinates.map(
                          (item, i) => {
                            return (
                              <span className="label label-roles" key={i}>
                                {item}
                              </span>
                            );
                          }
                        )}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Instructions :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.delivery?.instruction}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell className="table-partition">
                        Package Details
                      </StyledTableCell>
                      <StyledTableCell className="table-partition"></StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Package Type:-
                      </StyledTableCell>
                      <StyledTableCell>
                        {packagesType[jobDetail?.package_info?.item_type] ||
                          jobDetail?.package_info?.item_type}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Vehicle :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.preferred_vehicle_choice}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        No. of Packages :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.package_info?.no_of_items}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Cost by :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.package_info?.price_per_mile
                          ? "Mile"
                          : "Parcel"}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Cost per Mile/Parcel :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.package_info?.price_per_mile_parcel} &euro;
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Delivery Date :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {new Date(jobDetail?.delivery_date).toDateString()}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">
                        Delivery Time :-
                      </StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.delivery_time}
                      </StyledTableCell>
                    </StyledTableRow>

                    <StyledTableRow>
                      <StyledTableCell variant="head">Note :-</StyledTableCell>
                      <StyledTableCell>
                        {jobDetail?.package_info?.notes}
                      </StyledTableCell>
                    </StyledTableRow>

                          {jobDetail?.attachments?.map(item =>{
                            return <StyledTableRow>
                            <StyledTableCell variant="head" style={{textTransform:"capitalize"}}>{item?.name} :-</StyledTableCell>
                            <StyledTableCell>
                              <img
                                src={item?.url}
                                alt={item?.name}
                                className="vehicle-img"
                              />
                            </StyledTableCell>
                          </StyledTableRow> 
                          })}
                    {/* <StyledTableRow>
                      <StyledTableCell variant="head">Image :-</StyledTableCell>
                      <StyledTableCell>
                        <img
                          src={jobDetail?.attachment?.url}
                          alt="img"
                          className="vehicle-img"
                        />
                      </StyledTableCell>
                    </StyledTableRow> */}

                    <TableRow>
                      <TableCell>
                        <button className="creatButton label-success ">
                          <Link href={rout}>Back to List</Link>
                        </button>
                      </TableCell>
                    </TableRow>
                  </tbody>
                </Table>
              </div>
            }
          </div>
        </div>
      </div>
    </>
  );
};

export default driverProfile;

const StyledTableCell = styled(TableCell)(({ theme }) => ({
  [`&.${tableCellClasses.head}`]: {
    // backgroundColor: theme.palette.common.black,
    // color: theme.palette.common.white,
    fontWeight: 700,
    width: "50%",
    borderRight: "1px solid #e5e7eb",
  },
  [`&.${tableCellClasses.body}`]: {
    fontSize: 14,
    width: "50%",
  },
}));

const StyledTableRow = styled(TableRow)(({ theme }) => ({
  "&:nth-of-type(odd)": {
    backgroundColor: theme.palette.action.hover,
  },
  // hide last border
  "&:last-child td, &:last-child th": {
    border: 0,
    border: "1px solid gray",
  },
}));
